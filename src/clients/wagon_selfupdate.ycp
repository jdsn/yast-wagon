/**
 * File:
 *	clients/wagon_selfupdate.ycp
 *
 * Module:
 *	Wagon
 *
 * Authors:
 *	Lukas Ocilka <locilka@suse.cz>
 *
 * Summary:
 *	Online Migration Tool
 *
 * $Id$
 *
 */

{
    import "Wizard";
    import "GetInstArgs";
    import "Popup";
    import "Internet";
    import "Installation";
    import "PackageCallbacks";
    import "ProductControl";
    import "Stage";
    import "Mode";
    import "Report";
    import "FileUtils";
    import "Wagon";

    textdomain "wagon";

    map argmap = GetInstArgs::argmap();

    Wagon::InitPkg();

    // heading text
    string heading_text = _("Wagon Self-Update");

    term contents = `VBox (
	`Label (_("Wagon has just updated itself"))
    );

    // help text
    string help_text = _("<p>FIXME: some help is needed</p>");

    Wizard::SetContents (heading_text, contents, help_text,
	argmap["enable_back"]:true , argmap["enable_next"]:true);
    Wizard::EnableAbortButton ();

    list <map <string, any> > products = Pkg::ResolvableProperties ("", `product, "");
    y2milestone ("All known products: %1", products);


// --->
    string old_md5sum = FileUtils::MD5sum (ProductControl::custom_control_file);

    // Here the update stack updates itself

    // FIXME: replace with calling the update
    Report::Message ("If you change the workflow definition file now,
YaST will be restarted.");

    string new_md5sum = FileUtils::MD5sum (ProductControl::custom_control_file);

    if (old_md5sum != new_md5sum) {
	y2milestone ("Workflow might have changed, rereading...");
	return `restart_same_step;
    }
// <---


    any ret = nil;

    while (true) {
	ret = UI::UserInput();

	if (ret == `back) {
	    break;
	} else if ((ret == `abort || ret == `cancel) && Popup::ConfirmAbort (`painless)) {
	    Wizard::RestoreNextButton();
	    ret = `abort;
	    break;
	} else if (ret == `next) {
	    break;
	} else {
	    y2error ("Unknown ret: %1", ret);
	}
    }

    return (symbol) ret;
}
